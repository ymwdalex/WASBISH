// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mobileProtocol.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mobileProtocol {

namespace {

const ::google::protobuf::Descriptor* ucMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ucMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CmdType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_mobileProtocol_2eproto() {
  protobuf_AddDesc_mobileProtocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mobileProtocol.proto");
  GOOGLE_CHECK(file != NULL);
  ucMsg_descriptor_ = file->message_type(0);
  static const int ucMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ucMsg, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ucMsg, vpattern_),
  };
  ucMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ucMsg_descriptor_,
      ucMsg::default_instance_,
      ucMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ucMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ucMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ucMsg));
  CmdType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mobileProtocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ucMsg_descriptor_, &ucMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mobileProtocol_2eproto() {
  delete ucMsg::default_instance_;
  delete ucMsg_reflection_;
}

void protobuf_AddDesc_mobileProtocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024mobileProtocol.proto\022\016mobileProtocol\"@"
    "\n\005ucMsg\022%\n\004type\030\001 \002(\0162\027.mobileProtocol.C"
    "mdType\022\020\n\010vPattern\030\002 \003(\003*\030\n\007CmdType\022\r\n\tV"
    "IBRATION\020\000B\037\n\rrug.ucProjectB\016mobileProto"
    "col", 163);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mobileProtocol.proto", &protobuf_RegisterTypes);
  ucMsg::default_instance_ = new ucMsg();
  ucMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mobileProtocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mobileProtocol_2eproto {
  StaticDescriptorInitializer_mobileProtocol_2eproto() {
    protobuf_AddDesc_mobileProtocol_2eproto();
  }
} static_descriptor_initializer_mobileProtocol_2eproto_;

const ::google::protobuf::EnumDescriptor* CmdType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CmdType_descriptor_;
}
bool CmdType_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int ucMsg::kTypeFieldNumber;
const int ucMsg::kVPatternFieldNumber;
#endif  // !_MSC_VER

ucMsg::ucMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ucMsg::InitAsDefaultInstance() {
}

ucMsg::ucMsg(const ucMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ucMsg::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ucMsg::~ucMsg() {
  SharedDtor();
}

void ucMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ucMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ucMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ucMsg_descriptor_;
}

const ucMsg& ucMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mobileProtocol_2eproto();  return *default_instance_;
}

ucMsg* ucMsg::default_instance_ = NULL;

ucMsg* ucMsg::New() const {
  return new ucMsg;
}

void ucMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  vpattern_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ucMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .mobileProtocol.CmdType type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (mobileProtocol::CmdType_IsValid(value)) {
            set_type(static_cast< mobileProtocol::CmdType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_vPattern;
        break;
      }
      
      // repeated int64 vPattern = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vPattern:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_vpattern())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_vpattern())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_vPattern;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ucMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .mobileProtocol.CmdType type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }
  
  // repeated int64 vPattern = 2;
  for (int i = 0; i < this->vpattern_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->vpattern(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ucMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .mobileProtocol.CmdType type = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }
  
  // repeated int64 vPattern = 2;
  for (int i = 0; i < this->vpattern_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->vpattern(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ucMsg::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .mobileProtocol.CmdType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
  }
  // repeated int64 vPattern = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->vpattern_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->vpattern(i));
    }
    total_size += 1 * this->vpattern_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ucMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ucMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ucMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ucMsg::MergeFrom(const ucMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  vpattern_.MergeFrom(from.vpattern_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ucMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ucMsg::CopyFrom(const ucMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ucMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void ucMsg::Swap(ucMsg* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    vpattern_.Swap(&other->vpattern_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ucMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ucMsg_descriptor_;
  metadata.reflection = ucMsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mobileProtocol

// @@protoc_insertion_point(global_scope)
